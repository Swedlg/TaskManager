// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagerPostgresDatabaseImplement;

namespace TaskManagerPostgresDatabaseImplement.Migrations
{
    [DbContext(typeof(TaskManagerDatabase))]
    partial class TaskManagerDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.developerid", "'developerid', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.employerid", "'employerid', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.programlanguageid", "'programlanguageid', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.stageid", "'stageid', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.taskid", "'taskid', '', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DeveloperPosition")
                        .IsRequired()
                        .HasColumnName("developerposition")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FullNameOfDeveloper")
                        .IsRequired()
                        .HasColumnName("fullnameofdeveloper")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("WorkExperience")
                        .HasColumnName("workexperience")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnName("isdeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("developers");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.DeveloperProgramLanguage", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnName("developerid")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramLanguageId")
                        .HasColumnName("programlanguageid")
                        .HasColumnType("integer");

                    b.HasKey("DeveloperId", "ProgramLanguageId")
                        .HasName("developer_programlanguage_pkey");

                    b.HasIndex("ProgramLanguageId");

                    b.ToTable("developer_programlanguage");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmployerLogin")
                        .IsRequired()
                        .HasColumnName("employerlogin")
                        .HasColumnType("text");

                    b.Property<string>("EmployerPassword")
                        .IsRequired()
                        .HasColumnName("employerpassword")
                        .HasColumnType("text");

                    b.Property<string>("FullNameOfEmployer")
                        .IsRequired()
                        .HasColumnName("fullnameofemployer")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnName("isdeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("employers");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.ProgramLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LanguageDescription")
                        .HasColumnName("languagedescription")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnName("languagename")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("programlanguages");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StageDescription")
                        .IsRequired()
                        .HasColumnName("stagedescription")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("StageFinishDate")
                        .HasColumnName("stagefinishdate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StageStartDate")
                        .HasColumnName("stagestartdate")
                        .HasColumnType("date");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<bool>("isComplited")
                        .HasColumnName("iscomplited")
                        .HasColumnType("boolean");

                    b.Property<bool>("isDeleted")
                        .HasColumnName("isdeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("stages");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.StageDeveloper", b =>
                {
                    b.Property<int>("StageId")
                        .HasColumnName("stageid")
                        .HasColumnType("integer");

                    b.Property<int>("DeveloperId")
                        .HasColumnName("developerid")
                        .HasColumnType("integer");

                    b.HasKey("StageId", "DeveloperId")
                        .HasName("stage_developer_pkey");

                    b.HasIndex("DeveloperId");

                    b.ToTable("stage_developer");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EmployerId")
                        .HasColumnName("employerid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaskFinishDate")
                        .HasColumnName("taskfinishdate")
                        .HasColumnType("date");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnName("taskname")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("TaskStartDate")
                        .HasColumnName("taskstartdate")
                        .HasColumnType("date");

                    b.Property<bool>("isDeleted")
                        .HasColumnName("isdeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.DeveloperProgramLanguage", b =>
                {
                    b.HasOne("TaskManagerPostgresDatabaseImplement.Models.Developer", "Developer")
                        .WithMany("DeveloperProgramLanguages")
                        .HasForeignKey("DeveloperId")
                        .HasConstraintName("developerid_fkey")
                        .IsRequired();

                    b.HasOne("TaskManagerPostgresDatabaseImplement.Models.ProgramLanguage", "ProgramLanguage")
                        .WithMany("ProgramLanguageDevelopers")
                        .HasForeignKey("ProgramLanguageId")
                        .HasConstraintName("programlanguageid_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.Stage", b =>
                {
                    b.HasOne("TaskManagerPostgresDatabaseImplement.Models.Task", "Task")
                        .WithMany("Stages")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("taskid_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.StageDeveloper", b =>
                {
                    b.HasOne("TaskManagerPostgresDatabaseImplement.Models.Developer", "Developer")
                        .WithMany("DeveloperStages")
                        .HasForeignKey("DeveloperId")
                        .HasConstraintName("developerid_fkey")
                        .IsRequired();

                    b.HasOne("TaskManagerPostgresDatabaseImplement.Models.Stage", "Stage")
                        .WithMany("StageDevelopers")
                        .HasForeignKey("StageId")
                        .HasConstraintName("stageid_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagerPostgresDatabaseImplement.Models.Task", b =>
                {
                    b.HasOne("TaskManagerPostgresDatabaseImplement.Models.Employer", "Employer")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployerId")
                        .HasConstraintName("employerid_fkey")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
