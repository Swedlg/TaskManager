// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagerDatabaseImplement;

namespace TaskManagerDatabaseImplement.Migrations
{
    [DbContext(typeof(TaskManagerDatabase))]
    partial class TaskManagerDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.Developer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DeveloperPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullNameOfDeveloper")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WorkExperience")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.DeveloperProgramLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DeveloperId")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramLanguageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("ProgramLanguageId");

                    b.ToTable("DeveloperProgramLanguage");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.Employer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmployerLogin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployerPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullNameOfEmployer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.ProgramLanguage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LanguageDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProgramLanguages");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.Stage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StageDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("StageFinishDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StageStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<bool>("isComplited")
                        .HasColumnType("boolean");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.StageDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DeveloperId")
                        .HasColumnType("integer");

                    b.Property<int>("StageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("StageId");

                    b.ToTable("StageDeveloper");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.Task", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EmployerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaskFinishDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TaskStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.DeveloperProgramLanguage", b =>
                {
                    b.HasOne("TaskManagerDatabaseImplement.Models.Developer", "Developer")
                        .WithMany("DeveloperProgramLanguages")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagerDatabaseImplement.Models.ProgramLanguage", "ProgramLanguage")
                        .WithMany("ProgramLanguageDevelopers")
                        .HasForeignKey("ProgramLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.Stage", b =>
                {
                    b.HasOne("TaskManagerDatabaseImplement.Models.Task", "Task")
                        .WithMany("Stages")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.StageDeveloper", b =>
                {
                    b.HasOne("TaskManagerDatabaseImplement.Models.Developer", "Developer")
                        .WithMany("DeveloperStages")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagerDatabaseImplement.Models.Stage", "Stage")
                        .WithMany("StageDevelopers")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagerDatabaseImplement.Models.Task", b =>
                {
                    b.HasOne("TaskManagerDatabaseImplement.Models.Employer", "Employer")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
